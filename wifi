#!/bin/bash
## **********************************************************************************
## 
## Name:    wifi
## Author:  Gabriel Gonzalez
## Email:   gabeg@bu.edu
## License: The MIT License (MIT)
## 
## Syntax: wifi command <argument>
##         
##         Use '--help' for more details.
##         
## Description: Display network connectivity information.
##              
## Notes: None.
## 
## **********************************************************************************



## ================
## GLOBAL VARIABLES
## ================

ARGV=("$@")
PROG_NAME=`basename $0`
PROG_DIR=`echo "$0" | sed "s/\/${PROG_NAME}$//"`
PROG_EXEC=("ip" "iw" "netctl" "systemctl")
NETWORK_DIR="/etc/netctl"
NETWORK_FILE="/proc/net/wireless"
NOTIFY="noti"



## #######################################
## ##### DISPLAY NETWORK INFORMATION #####
## #######################################

## Display Wifi information
main() {
    
    programs_exist
    
    case "${ARGV[0]}" in
        "strength")
            echo "Wifi: $(get_signal)%"
            ;;
        "ssid")
            echo "SSID: $(get_ssid)"
            ;;
        "search")
            wifi_search
            ;;
        "connect")
            wifi_connect
            ;;
        "notify")
            PROG_EXEC+=("${NOTIFY}")
            programs_exist
            wifi_notification
            ;;
        "-h"|"--help")
            usage
            ;;
        *)
            echo "${PROG_NAME}: Invalid input '${ARGV[0]}'" 1>&2
            echo 1>&2
            usage 1>&2
            ;;
    esac    
}



## ###############################
## ##### PRINT PROGRAM USAGE #####
## ###############################

## Print program usage
usage() {
    echo "Usage: ${PROG_NAME} command <argument>"
    echo
    echo "Commands:"
    echo "    strength            Print the wifi signal strength"
    echo "    ssid                Print the SSID of the connected wifi signal"
    echo "    search <keyword>    Scan for wifi signals"
    echo "    connect <wifi>      Connect to the wifi signal"
    echo "    notify              Displ${ARGV[0]}ay wifi information in a notification bubble"
    echo
    echo "Arguments:"
    echo "    <keyword>           Specific keyword to search in scan output"
    echo "    <wifi>              Wifi file in /etc/netctl to connect to"

    exit 1
}



## #####################################
## ##### PRINT NETWORK INFORMATION #####
## #####################################

## Print network signal strength
get_signal() {
    
    ## Get wifi information
    dbm=`tail -1 "${NETWORK_FILE}" | awk '{ print $4 }'`
    min=95
    max=35
    diff=$[ ${min} - ${max} ]
    
    ## Check that wifi info is a valid number
    wifi_status "${dbm}"
    
    ## Calculate the signal strengt
    temp=`echo "scale=2; ( ${min} + ${dbm} ) / ${diff} * 100" | bc`
    signal=`echo "${temp} / 1" | bc`
    
    echo "${signal}"
}



## Print network SSIDLOG
get_ssid() {
    ssid=`"${PROG_EXEC[1]}" dev "wlp1s0" link \
              | grep SSID \
              | cut -f2 -d':' \
              | sed 's/^[ \t]*//'`
    echo "${ssid}"
}



## ####################################
## ##### SEARCH FOR WIFI NETWORKS #####
## ####################################

## Print network signal strength
wifi_search() {
    
    case "${ARGV[1]}" in
        "") 
            search="signal|SSID|$" 
            ;;
        
        "signal") 
            search="signal" 
            ;;
        
        "ssid") 
            search="SSID" 
            ;;
        
        "info")
            search="signal|SSID"
            ;;
        
        *)
            usage
            ;;
    esac
    
    sudo "${PROG_EXEC[0]}" link set "wlp1s0" up
    sudo "${PROG_EXEC[1]}" dev "wlp1s0" scan \
         | grep --color=always -E "${search}"
}



## ###################################
## ##### CONNECT TO THE INTERNET #####
## ###################################

## Connect to the internet using netctl
wifi_connect() {
    
    ## Netctl directory files
    contents=(`ls -1 "${NETWORK_DIR}"`)
    
    ## Loop through directory files
    for net in "${contents[@]}"; do
        
        ## Find correct config file
        if [ -d "${net}" ] || [[ "${net}" != "${ARGV[1]}" ]]; then
            continue
        fi
        
        ## Connect to the specified config file
        echo -n "Connecting to '${net}'..."
        
        sudo "${PROG_EXEC[2]}" stop-all
        sudo "${PROG_EXEC[3]}" stop netctl
        sudo "${PROG_EXEC[0]}" link set "wlp1s0" down
        
        start=`sudo "${PROG_EXEC[2]}" start "${net}"`
        
        if [ ! -z "${start}" ]; then
            echo "Fail."
            exit 1
        else                
            echo "Done."
            return 0
        fi
    done
}



## ####################################
## ##### GUI BATTERY NOTIFICATION #####
## ####################################

## GUI notification for displaying current battery level
wifi_notification() {
    "${NOTIFY}" --time 5 -b "Wifi: $(get_signal)%\nSSID: $(get_ssid)" 
}



## #################################
## ##### NETWORK DATA VALIDITY #####
## #################################

## Check if commands exist
programs_exist() {
    for prog in "${PROG_EXEC[@]}"; do
        if [ ! -z "$(hash ${prog} 2>&1)" ]; then
            echo "${PROG_NAME}: '${prog}' command does not exist." 
            exit 1
        fi
    done
}



## Check data from network file
wifi_status() {
    val=`echo "$1" | sed 's/\..*//'`
    
    if [ "${val}" -eq "${val}" ] 2> /dev/null; then
        addr=`"${PROG_EXEC[0]}" r | grep default | cut -f3 -d' '`
        ping -q -W 1 -c 1 "${addr}" &> /dev/null
        
        if [ $? -eq 0 ]; then
            return 0
        fi
    fi
    
    echo "${PROG_NAME}: No internet connection."
    exit 1
}



## ============
## Execute Main
## ============

main 
