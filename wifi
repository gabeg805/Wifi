#!/bin/bash
# ******************************************************************************
# 
# Name:    wifi
# Author:  Gabriel Gonzalez
# Email:   gabeg@bu.edu
# License: The MIT License (MIT)
# 
# Syntax: wifi [options] <arguments>
#         
#         Use '--help' for more details.
#         
# Description: Display network connectivity information.
#              
# Notes: None.
# 
# ******************************************************************************

# Global variables
ARGV=("$@")
PROG_NAME=`basename $0`
PROG_DIR=`echo "$0" | sed "s/\/${PROG_NAME}$//"`
PROG_EXEC=("ip" "iw" "netctl" "systemctl")
NETDIR="/etc/netctl"
NETFILE="/proc/net/wireless"
NETDEV="wlp1s0"
NOTIFY="noti"

# ******************************************************************************
# Display Wifi information
main()
{
    programs_exist
    case "${ARGV[0]}" in
        ""|"-h"|"--help")
            usage
            exit 0
            ;;
        "-s"|"--signal")
            signal=`get_signal` || exit 1
            echo "Wifi: ${signal}%"
            ;;
        "-ss"|"--ssid")
            ssid=`get_ssid` || exit 1
            echo "SSID: ${ssid}"
            ;;
        "-S"|"--scan")
            wifi_scan
            ;;
        "-c"|"--connect")
            wifi_connect
            ;;
        "-d"|"--disconnect")
            wifi_disconnect
            ;;
        "-n"|"--notify")
            PROG_EXEC+=("${NOTIFY}")
            programs_exist
            wifi_notification
            ;;
        *)
            echo "${PROG_NAME}: Invalid input '${ARGV[0]}'." 1>&2
            echo 1>&2
            usage 1>&2
            exit 1
            ;;
    esac    
}

# ******************************************************************************
# Print program usage
usage() {
    echo "Usage: ${PROG_NAME} [options] <arguments>"
    echo
    echo "Options:"
    echo "    -h, --help                Print program usage message"
    echo "    -s, --signal              Print the wifi signal strength"
    echo "    -ss, --ssid               Print the SSID of the connected wifi signal"
    echo "    -S, --scan <keyword>      Scan for wifi signals"
    echo "    -c, --connect <signal>    Connect to the wifi signal"
    echo "    -d, --disconnect          Disconnect from the wifi signal"
    echo "    -n, --notify              Display wifi information in a notification bubble"
    echo
    echo "Arguments:"
    echo "    <keyword>                 Specific keyword to search in scan output"
    echo "    <signal>                  Wifi file in /etc/netctl to connect to"
}

# ******************************************************************************
# Print network signal strength
get_signal()
{
    dbm=`tail -1 "${NETFILE}" | awk '{ print $3 }'`
    if `is_int "${dbm}"`; then
        if `is_connected`; then
            :
        else
            exit 1
        fi
    else
        exit 1
    fi
    signal=`echo "scale=2; ${dbm}/70*100" | bc`
    echo "${signal} / 1" | bc
}

# ******************************************************************************
# Print network SSIDLOG
get_ssid() {
    ssid=`"${PROG_EXEC[1]}" dev "${NETDEV}" link \
              | grep SSID \
              | cut -f2 -d':' \
              | sed 's/^[ \t]*//'`
    echo "${ssid}"
}

# ***************************************************************************************
# Print network signal strength
wifi_scan()
{
    case "${ARGV[1]}" in
        "") search="signal|SSID|$" ;;
        *) search="${ARGV[1]}" ;;
    esac
    
    sudo "${PROG_EXEC[0]}" link set "${NETDEV}" up
    sudo "${PROG_EXEC[1]}" dev "${NETDEV}" scan \
         | grep --color=always -E "${search}"
}

# ******************************************************************************
# Connect to the internet using netctl
wifi_connect()
{
    contents=(`ls -1 "${NETDIR}"`)
    for net in "${contents[@]}"; do
        if [ -d "${net}" ] || [[ "${net}" != "${ARGV[1]}" ]]; then
            continue
        fi
        
        echo -n ":: Connecting to '${net}'..."
        sudo "${PROG_EXEC[2]}" stop-all
        sudo "${PROG_EXEC[3]}" stop netctl
        sudo "${PROG_EXEC[0]}" link set "${NETDEV}" down
        start=`sudo "${PROG_EXEC[2]}" start "${net}"`
        
        if [ ! -z "${start}" ]; then
            echo "Fail."
            exit 1
        else                
            echo "Done."
            return 0
        fi
    done
}

# ******************************************************************************
# Disconnect from the internet using netctl
wifi_disconnect()
{
    echo -n ":: Disconnecting wifi..."
    sudo "${PROG_EXEC[2]}" stop-all
    echo "Done."
}

# ******************************************************************************
# Check if commands exist
programs_exist()
{
    for prog in "${PROG_EXEC[@]}"; do
        if [ ! -z "$(hash ${prog} 2>&1)" ]; then
            echo "${PROG_NAME}: '${prog}' command does not exist." 1>&2
            exit 1
        fi
    done
}

# ******************************************************************************
# Check data from network file
is_int()
{
    val=`echo "$1" | sed 's/\..*$//g'`
    if [ "${val}" -eq "${val}" ] 2> /dev/null; then
        echo true
    else
        echo false
    fi
}

# ******************************************************************************
# Check if signal is connected
is_connected()
{
    addr=`"${PROG_EXEC[0]}" r | grep default | cut -f3 -d' '`
    ping -q -W 1 -c 1 "${addr}" &> /dev/null
    if [ $? -eq 0 ]; then
        echo true
    else
        echo "${PROG_NAME}: No internet connection." 1>&2
        echo false
    fi
}

# ******************************************************************************
# Execute Main
main 
