#!/bin/bash
## **********************************************************************************
## 
## Name:    wifi
## Author:  Gabriel Gonzalez
## Email:   gabeg@bu.edu
## License: The MIT License (MIT)
## 
## Syntax: wifi [-s] [-c] [-d]
## 
## Description: Display network connectivity information.
##              
## Notes: None.
## 
## **********************************************************************************



## ================
## GLOBAL VARIABLES
## ================

## Program information
ARGV=("$@")
PROG_NAME=`basename $0`

## Directories
NETWORK_DIR="/etc/netctl"

## Log files
NETWORK_LOG="/proc/net/wireless"

## Gui notification bubble
NOTIFY="noti"




## ###############################
## ##### PRINT PROGRAM USAGE #####
## ###############################

## Print program usage
function print_usage {
    echo "Usage: ${PROG_NAME} [-s] [-d] [-c]"
    exit 1
}



## #################################
## ##### NETWORK DATA VALIDITY #####
## #################################

## Check status of wifi
function status_wifi {
    exist=`hash ip 2>&1`
    
    if [ ! -z "${exist}" ]; then
        echo "${PROG_NAME}: 'ip' command does not exist." 
        exit 1
    fi
    
    addr=`ip r | grep default | cut -f3 -d' '`
    ping -q -W 1 -c 1 "${addr}" &> /dev/null
    
    return $?
}



## Check data from network file
function status_data {
    if [ "$1" -eq "$1" ] 2> /dev/null; then
        status_wifi
        
        if [ $? -eq 0 ]; then
            return 0
        fi
    fi
    
    echo "${PROG_NAME}: No internet connection."
    exit 1
}



## #####################################
## ##### PRINT NETWORK INFORMATION #####
## #####################################

## Print network signal strength
function print_strength {
    
    ## Get wifi information
    info=`tail -1 "${NETWORK_LOG}"`
    dbm=`echo "${info}" | awk ' { print $4 } ' | sed 's/\.//g'`
    min=95
    max=35
    diff=$[ ${min} - ${max} ]
    
    ## Check that wifi info is a valid number
    status_data "${dbm}"
    
    ## Calculate the signal strength
    signal=`echo "scale=3; ( ${min} + ${dbm} ) / ${diff} * 100.0" \
                | bc \
                | sed 's/.$//'`
    valid=`echo "${signal} > 1" | bc`
    
    if [ ${valid} -eq 1 ]; then
        echo "Wifi: ${signal}%"
    else
        echo "${PROG_NAME}: Bad signal (${signal})"
        exit 1
    fi
}



## Print network SSID
function print_ssid {
    exist=`hash iw 2>&1`
    
    if [ ! -z "${exist}" ]; then
        echo "${PROG_NAME}: 'iw' command does not exist."
        exit 1
    fi
    
    ssid=`iw dev wlp1s0 link \
              | grep SSID \
              | cut -f2 -d':' \
              | sed 's/^[ \t]*//'`
    echo "SSID: ${ssid}"
}



## ###################################
## ##### CONNECT TO THE INTERNET #####
## ###################################

## Connect to the internet using netctl
function internet_connect {
    
    ## Check if commands exist
    net_exist=`hash netctl 2>&1`
    sys_exist=`hash systemctl 2>&1`
    
    if [ ! -z "${net_exist}" ]; then
        echo "${PROG_NAME}: 'netctl' command does not exist."
        exit 1
    fi
    
    if [ ! -z "${sys_exist}" ]; then
        echo "${PROG_NAME}: 'systemctl' command does not exist."
        exit 1
    fi
    
    ## Netctl directory files
    contents=(`ls -1 "${NETWORK_DIR}"`)
    
    ## Loop through directory files
    for net in "${contents[@]}"; do
        
        ## Config files
        if [ ! -d "${net}" ]; then
            
            ## Conenct to the specified config file
            if [[ "${net}" == "${ARGV[1]}" ]]; then
                echo -n "Connecting to '${net}'..."
                
                sudo netctl stop-all
                sudo systemctl stop netctl
                sudo ip link set "wlp1s0" down
                
                start=`sudo netctl start "${net}"`
                
                if [ ! -z "${start}" ]; then
                    echo "Fail."
                    exit 1
                else                
                    echo "Done."
                fi
            fi
            
        fi
    done
}



## ####################################
## ##### GUI BATTERY NOTIFICATION #####
## ####################################

## GUI notification for battery information
function gui_display {
    
    ## Check if notification program exists
    exist=`hash "${NOTIFY}" 2>&1`
    
    if [ ! -z "${exist}" ]; then 
        echo "${PROG_NAME}: '${NOTIFY}' command does not exist."
        exit 1
    fi
    
    ## Display current battery level
    ${NOTIFY} --time 5 -b "$(print_strength)\n$(print_ssid)" 
}



## #######################################
## ##### DISPLAY NETWORK INFORMATION #####
## #######################################

## Display Wifi information
function main {
    
    ## Display wifi information
    case "${ARGV[0]}" in
        "")
            print_strength
            ;;
        
        "-s"|"--ssid")
            print_ssid
            ;;
        
        "-c"|"--connect")
            internet_connect
            ;;
        
        "-d"|"--display")
            gui_display
            ;;
        
        *)
            print_usage
            ;;
    esac    
}



## Execute main
main 
